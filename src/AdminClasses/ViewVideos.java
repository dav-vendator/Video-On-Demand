package AdminClasses;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Hardeep
 */
public class ViewVideos extends javax.swing.JInternalFrame {

    TableModel tm;
    ArrayList<TableData> list1 = new ArrayList<>();

    public ViewVideos() {
        tm = new TableModel();
        initComponents();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/vod", "root", "system");
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

            ResultSet rs = stmt.executeQuery("SELECT * FROM Videos WHERE Category_name='Movies'");

            while (rs.next()) {
                list1.add(new TableData(rs.getInt("video_id"), rs.getString("Title"),
                        rs.getString("Video_Path"),
                        rs.getString("Trailer_Path")));

            }

        } catch (Exception seEx) {
            seEx.printStackTrace();
        }

        this.tbMovie.setModel(tm);
        tm.fireTableDataChanged();
    }

    class TableData {

        int video_id;
        String title;
        String moviePath;
        String trailerPath;

        TableData(int video_id, String t, String m, String tp) {
            this.video_id = video_id;
            this.title = t;
            this.moviePath = m;
            this.trailerPath = tp;

        }
    }

    class TableModel extends AbstractTableModel {

        String[] titles = {"Serial No.", "Title", "TrailerPath", "movie path"};

        public int getRowCount() {
            return list1.size();
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            TableData td = list1.get(rowIndex);
            if (columnIndex == 0) {
                return rowIndex + 1;
            } else if (columnIndex == 1) {
                return td.title;
            } else if (columnIndex == 2) {
                return td.moviePath;
            } else {
                return td.trailerPath;
            }
        }

        @Override
        public String getColumnName(int column) {
            return titles[column]; //To change body of generated methods, choose Tools | Templates.
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btEdit = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbMovie = new javax.swing.JTable();

        getContentPane().setLayout(null);

        btEdit.setBackground(new java.awt.Color(255, 255, 255));
        btEdit.setText("EDIT");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });
        getContentPane().add(btEdit);
        btEdit.setBounds(132, 371, 70, 23);

        btDelete.setBackground(new java.awt.Color(255, 255, 255));
        btDelete.setText("DELETE");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btDelete);
        btDelete.setBounds(330, 370, 80, 23);

        tbMovie.setModel(tm);
        jScrollPane2.setViewportView(tbMovie);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(2, 0, 630, 360);

        pack();
    }// </editor-fold>//GEN-END:initComponents
////
    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        int ans = tbMovie.getSelectedRow();
        if (ans == -1) {
            JOptionPane.showMessageDialog(this, "Please Select a row first");
        } else {
            int video_id = list1.get(ans).video_id;
            int ansd = JOptionPane.showConfirmDialog(this, "Are you sure to delete this row ?",
                    "My Confirm Dialog", JOptionPane.YES_NO_OPTION);
            if (ansd == JOptionPane.YES_OPTION) {
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/vod", "root", "system");
                    Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                            ResultSet.CONCUR_UPDATABLE);
                    ResultSet rs = stmt.executeQuery("select * from videos where video_id='" + video_id + "'");
                    if (rs.next()) {
                        rs.deleteRow();
                        list1.remove(ans);
                        tm.fireTableDataChanged();
                    }
                } catch (Exception seEx) {
                    seEx.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        int ans = tbMovie.getSelectedRow();
        if (ans == -1) {
            JOptionPane.showMessageDialog(this, "Please Select a row first");
        } else {

            int video_id = this.list1.get(ans).video_id;
            EditVideo obj = new EditVideo(video_id);
            obj.setSize(600, 700);
            obj.setIconifiable(true);
            obj.setMaximizable(true);
            obj.setClosable(true);
            obj.setResizable(false);
            this.getDesktopPane().add(obj);
            obj.setVisible(true);
            obj.moveToFront();

        }

    }//GEN-LAST:event_btEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btEdit;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbMovie;
    // End of variables declaration//GEN-END:variables
}
